// Top- down approach
class Solution {
    int[] dp;
    int solve(int n){
        if(n==1 || n==2) return n;
        if(dp[n]!=-1) return dp[n];
        return dp[n]=solve(n-1)+solve(n-2);
    }
    public int climbStairs(int n) {
        dp=new int[n+1];
        Arrays.fill(dp,-1);
        return solve(n);
    }
}

//Bottom-up approach
class Solution {
    public int climbStairs(int n) {
        if(n<3) return n;
        int first=1,second=2;
        for(int i=3;i<=n;i++){
            int temp=first+second;
            first=second;
            second=temp;
        }
        return second;
    }
}
